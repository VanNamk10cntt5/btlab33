public  class  Nhanvien {
    // Khai báo các thuộc tính của lớp Nhanvien
    private  String  tenNhanVien ; // Tên nhân viên
    tư nhân  đôi  lượngCoBan ; // Lương cơ bản
     kép  riêng heSoLuong ; // Hệ số lương
    private  static  double  Luong_max = 10000000 ; // Lương tối đa

    // Hàm khởi tạo của lớp Nhanvien
    public  Nhanvien ( String  tenNhanVien , double  luongCoBan , double  heSoLuong ) {
        này . tenNhanVien = tenNhanVien ;
        này . luongCoBan = luongCoBan ;
        này . heSoLuong = heSoLuong ;
    }

    // Phương thức tính lương của nhân viên
    công  đôi  tinhLuong () {
        return  luongCoBan * heSoLuong ;
    }

    // Phương thức trong thông tin của nhân viên
    public  void  inTTin () {
        Hệ thống . ra . println ( "Tên nhân viên: " + tenNhanVien );
        Hệ thống . ra . println ( "Lương cơ bản: " + luongCoBan );
        Hệ thống . ra . println ( "Hệ số lương: " + heSoLuong );
        Hệ thống . ra . println ( "Luong: " + tinhLuong ());
    }

    // Phương thức tăng hệ số lương của nhân viên
    public  boolean  tangLuong ( double  tangHeSoLuong ) {
        double  newHeSoLuong = heSoLuong + tangHeSoLuong ;
        if ( tinhLuongMax ( newHeSoLuong )) { // Kiểm tra lương của nhân viên có quá mức lương tối đa không
            trả về  sai ;
        }
        heSoLuong = newHeSoLuong ;
        trả về  đúng ;
    }

    // Phương thức tính lương tối đa của nhân viên khi thay đổi hệ thống lương
    private  boolean  tinhLuongMax ( double  newHeSoLuong ) {
        return  tinhLuong () > Luong_max && tinhLuong ( newHeSoLuong ) > Luong_max ;
    }

    // Các phương thức get và set cho các thuộc tính của lớp Nhanvien
    public  String  getTenNhanVien () {
        quay  tenNhanVien ;
    }

    public  void  setTenNhanVien ( String  tenNhanVien ) {
        này . tenNhanVien = tenNhanVien ;
    }

    công  đôi  getLuongCoBan () {
        trả về  luongCoBan ;
    }

    public  void  setLuongCoBan ( double  luongCoBan ) {
        này . luongCoBan = luongCoBan ;
    }

    công  đôi  getHeSoLuong () {
        trả về  heSoLuong ;
    }

    public  void  setHeSoLuong ( double  heSoLuong ) {
        này . heSoLuong = heSoLuong ;
    }

    public  static  double  getLuong_max () {
        trả về  Luong_max ;
    }

    public  static  void  setLuong_max ( double  luong_max ) {
        luong_max = luong_max ;
    }
}


#bt1

public class bai1 {
    // File bai1.java

// Định nghĩa gói "myPackage" chứa các lớp liên quan đến hình học
package myPackage;

// Lớp HinhVuong biểu diễn hình vuông
public class HinhVuong {
    // Thuộc tính canh biểu diễn cạnh của hình vuông
    private double canh;

    // Phương thức khởi tạo với tham số cạnh
    public HinhVuong(double canh) {
        this.canh = canh;
    }

    // Phương thức getter trả về giá trị của thuộc tính canh
    public double getCanh() {
        return canh;
    }

    // Phương thức setter thiết lập giá trị của thuộc tính canh
    public void setCanh(double canh) {
        this.canh = canh;
    }

    // Phương thức tính diện tích của hình vuông
    public double tinhDienTich() {
        return canh * canh;
    }
}

// Lớp HinhTron biểu diễn hình tròn
public class HinhTron {
    // Thuộc tính banKinh biểu diễn bán kính của hình tròn
    private double banKinh;

    // Phương thức khởi tạo với tham số bán kính
    public HinhTron(double banKinh) {
        this.banKinh = banKinh;
    }

    // Phương thức getter trả về giá trị của thuộc tính banKinh
    public double getBanKinh() {
        return banKinh;
    }

    // Phương thức setter thiết lập giá trị của thuộc tính banKinh
    public void setBanKinh(double banKinh) {
        this.banKinh = banKinh;
    }

    // Phương thức tính diện tích của hình tròn
    public double tinhDienTich() {
        return Math.PI * banKinh * banKinh;
    }
}

    
}

#bt2

public class bai2 {
    public bai2() {
    }

    public class Vector {
        private double x;
        private double y;
        private double z;
    
        // Phương thức khởi tạo với 3 tham số
        public Vector(double x, double y, double z) {
            this.x = x;
            this.y = y;
            this.z = z;
        }
    
        // Phương thức lấy giá trị x
        public double getX() {
            return x;
        }
    
        // Phương thức lấy giá trị y
        public double getY() {
            return y;
        }
    
        // Phương thức lấy giá trị z
        public double getZ() {
            return z;
        }
    
        // Phương thức cộng 2 vector
        public Vector cong(Vector v) {
            return new Vector(x + v.getX(), y + v.getY(), z + v.getZ());
        }
    
        // Phương thức trừ 2 vector
        public Vector tru(Vector v) {
            return new Vector(x - v.getX(), y - v.getY(), z - v.getZ());
        }
    
        // Phương thức nhân vector với 1 hằng số
        public Vector nhan(double k) {
            return new Vector(k * x, k * y, k * z);
        }
    
        // Phương thức nhân vô hướng 2 vector
        public double nhanVH(Vector v) {
            return x * v.getX() + y * v.getY() + z * v.getZ();
        }
    }
    
    
}
